
<script src="{{ asset("lawnchair-0.6.1.min.js") }}" type="text/javascript"></script>

<script type="text/javascript" >
    $(document).ready(function () {
        window.boards_list = {{boards|raw}};
    mySelect = $("#boards");
    for (var i = 0; i < window.boards_list.length; i++)
        mySelect.append($('<option></option>').val(window.boards_list[i]["name"]).html(window.boards_list[i]["name"]));

    loadBoard();
    });

    function saveBoard() {
        new Lawnchair(function () {
            this.save({key:'board', name:$("#boards option:selected").text()});
        });
    }

    function loadBoard() {
        Lawnchair(function () {
            this.exists('board', function (exists) {
                if (exists) {
                    this.get('board', function (config) {
                        $("#boards").val(config.name)
                    })
                }
            });
        });
    }

        function getMaxSize() {
        var max_size;
        if ($("select[id='boards'] option:selected").html() == "Arduino Uno") {
            max_size = 32256;
        }
        else if ($("select[id='boards'] option:selected").html() == "Arduino Duemilanove") {
            max_size = 30720;
        }
        return max_size;
    }

    function generate_payload(format) {
        var files = load_files();

        var count = 0;
        var files_array = Array();
        jQuery.each(files, function (i, val) {
            files_array[count++] = {"filename":i, "content":$("<div/>").html(val).text()};
        });

        var payload = {"files":files_array, "format":format, "build":window.boards_list[$("#boards").prop("selectedIndex")]["build"]};
        return JSON.stringify(payload)
    }

    function verify() {

        $.get("{{ path('AceUtilitiesBundle_log', {'message':"verify"}) }}");

        var payload = generate_payload("syntax");

        setProgress(90);
        $.post("{{compiler}}", payload, function (data) {
            var obj = jQuery.parseJSON(data);
            if (obj.success == 0) {
                $("#compile").addClass("btn-warning");
                $("#compile_icon").addClass("icon-remove");
                clearProgress("Verification failed.")
            }
            else
            {
                $("#compile").addClass("btn-success");
                $("#compile_icon").addClass("icon-ok");
                clearProgress("<p>Verification Successful!</p>")
                window.sketch_size = obj.size;
            }
            $("#compile_icon").removeClass("icon-check").addClass("icon-white");

            window.setTimeout(function () {
                $("#compile").removeClass("btn-success").removeClass("btn-warning");
                $("#compile_icon").removeClass("icon-white").removeClass("icon-remove").removeClass("icon-ok").addClass("icon-check");
            }, 500);
            verification_update(obj);
        });
    }
</script>